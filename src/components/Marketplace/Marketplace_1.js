import './Marketplace_2.css';

import React, { useState, useEffect } from "react";
import { Container, Row, Col, Card, Button, Form, Badge, Tab, Nav } from "react-bootstrap";

const categories = [
  { icon: "ЁЯМ╛", title: "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛", subtitle: "Seeds & Seedlings", count: "рзирзйрзк ржкржгрзНржп" },
  { icon: "ЁЯЪЬ", title: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐", subtitle: "Equipment", count: "рззрзорзп ржкржгрзНржп" },
  { icon: "ЁЯРД", title: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░", subtitle: "Feed & Fertilizer", count: "рззрзлрзм ржкржгрзНржп" },
  { icon: "ЁЯТЙ", title: "ржФрж╖ржз ржУ ржнрзНржпрж╛ржХрж╕рж┐ржи", subtitle: "Medicine & Vaccines", count: "рзкрзй ржкржгрзНржп" },
];

const specialOffers = [
  {
    title: "ржорзМрж╕рзБржорзА ржЫрж╛ржбрж╝",
    description: "рж╕ржм ржзрж░ржирзЗрж░ ржмрзАржЬрзЗ рзирзж% ржкрж░рзНржпржирзНржд ржЫрж╛ржбрж╝",
    validity: "ржмрзИржзрждрж╛: рзйрзз ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐ ржкрж░рзНржпржирзНржд",
    code: "WINTER20",
  },
  {
    title: "ржмрж╛рж▓рзНржХ ржЕрж░рзНржбрж╛рж░рзЗрж░ ржЫрж╛ржбрж╝",
    description: "рззрзж,рзжрзжрзж ржЯрж╛ржХрж╛рж░ ржмрзЗрж╢рж┐ ржХрзЗржирж╛ржХрж╛ржЯрж╛ржпрж╝ рззрзл% ржЫрж╛ржбрж╝",
    validity: "ржмрзИржзрждрж╛: рззрзл ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐ ржкрж░рзНржпржирзНржд",
    code: "BULK15",
  },
];

const products = [
  {
    category: "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛",
    tag: "рж╕рзЗрж░рж╛ ржмрж┐ржХрзНрж░рзЗрждрж╛",
    discountPercent: 15,
    discountTag: "ржЫрж╛ржбрж╝",
    title: "ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржЙржЪрзНржЪ ржлрж▓ржирж╢рзАрж▓ ржмрзАржЬ",
    subtitle: "BRRI Dhan29 High Yield Seeds",
    desc: "ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗ ржЙрзОржкрж╛ржжрж┐ржд рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржирзЗрж░ ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржмрзАржЬ, ржЙржЪрзНржЪ ржлрж▓ржирж╢рзАрж▓ ржУ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзА",
    location: "ржХрзГрж╖рж┐ ржмрзАржЬ ржнржмржи, ржЧрж╛ржЬрзАржкрзБрж░, ржврж╛ржХрж╛",
    stock: true,
    price: 85,
    originalPrice: 100,
    unit: "ржкрзНрж░рждрж┐ ржХрзЗржЬрж┐",
    rating: 4.8,
    ratingCount: 156,
  },
  {
    category: "ржорзОрж╕рзНржп ржЪрж╛рж╖",
    tag: "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо",
    discountPercent: 0,
    discountTag: "",
    title: "рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржорж╛ржЫрзЗрж░ ржкрзЛржирж╛ (рзй-рзк ржЗржЮрзНржЪрж┐)",
    subtitle: "Tilapia Fish Fry (3-4 inches)",
    desc: "рж╕рзНржмрж╛рж╕рзНржерзНржпржмрж╛ржи ржУ ржжрзНрж░рзБржд ржмрж░рзНржзржирж╢рзАрж▓ рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржкрзЛржирж╛, ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐рж╕рж╣ рж╕рж░ржмрж░рж╛рж╣",
    location: "рж╕рзБржирзНржжрж░ржмржи ржорзОрж╕рзНржп ржЦрж╛ржорж╛рж░, ржЦрзБрж▓ржирж╛",
    stock: true,
    price: 25,
    originalPrice: 0,
    unit: "ржкрзНрж░рждрж┐ рззрзжрзжржЯрж┐",
    rating: 4.9,
    ratingCount: 89,
  },
  {
    category: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░",
    tag: "ржЬржиржкрзНрж░рж┐ржпрж╝",
    discountPercent: 7,
    discountTag: "ржЫрж╛ржбрж╝",
    title: "ржЧрж╛ржнрзАрж░ ржЬржирзНржп рж╕рзБрж╕ржо ржЦрж╛ржжрзНржп (рзлрзж ржХрзЗржЬрж┐)",
    subtitle: "Balanced Cattle Feed (50kg)",
    desc: "ржЧрж╛ржнрзАрж░ ржжрзБржз ржЙрзОржкрж╛ржжржи ржмрзГржжрзНржзрж┐рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржкрзНрж░рж╕рзНрждрзБрждржХрзГржд ржкрзБрж╖рзНржЯрж┐ржХрж░ ржЦрж╛ржжрзНржп",
    location: "ржкрзНрж░рж╛ржг ржПржЧрзНрж░рзЛ рж▓рж┐ржорж┐ржЯрзЗржб, ржирж╛рж░рж╛ржпрж╝ржгржЧржЮрзНржЬ, ржврж╛ржХрж╛",
    stock: true,
    price: 1850,
    originalPrice: 2000,
    unit: "ржкрзНрж░рждрж┐ ржмрж╕рзНрждрж╛",
    rating: 4.7,
    ratingCount: 234,
  },
];

const Marketplace = () => {
  const [activeTab, setActiveTab] = useState("products");
  const [visibleProducts, setVisibleProducts] = useState(3);

  useEffect(() => {
    const onScroll = () => {
      if (
        window.innerHeight + window.scrollY >=
        document.body.offsetHeight - 300
      ) {
        setVisibleProducts((prev) =>
          Math.min(prev + 1, products.length)
        );
      }
    };
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, []);

  return (
    <div className="marketplace-section">
      <Container>
        <div className="marketplace-header text-center mb-5">
          <h2 className="fw-bold">ржХрзГрж╖рж┐ ржжрж┐ржмрж╛ржирж┐рж╢рж┐ ржорж╛рж░рзНржХрзЗржЯржкрзНрж▓рзЗрж╕</h2>
          <p className="text-muted">Krishi Dibanishi Marketplace</p>
          <p className="text-muted fs-6 mx-auto" style={{ maxWidth: "600px" }}>
            ржХрзГрж╖рж┐, ржорзОрж╕рзНржп ржУ ржкрзНрж░рж╛ржгрж┐рж╕ржорзНржкржжрзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рж╕ржХрж▓ ржкржгрзНржп ржУ рж╕рзЗржмрж╛ ржПржХ
            ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ред ржмрж┐рж╢рзНржмрж╕рзНржд ржмрж┐ржХрзНрж░рзЗрждрж╛ ржУ рж╕рж╛рж╢рзНрж░ржпрж╝рзА ржорзВрж▓рзНржпред
          </p>
        </div>

        <Row className="mb-4 justify-content-center align-items-center">
          <Col md={6}>
            <Form.Control
              type="text"
              placeholder="ржкржгрзНржп, ржмрзАржЬ, ржпржирзНрждрзНрж░ржкрж╛рждрж┐ ржмрж╛ рж╕рзЗржмрж╛ ржЦрзБржБржЬрзБржи..."
              className="search-input"
            />
          </Col>
          <Col md="auto" className="d-flex gap-2">
            <Button variant="outline-secondary" className="btn-filter">
              ржлрж┐рж▓рзНржЯрж╛рж░
            </Button>
            <Button variant="outline-secondary" className="btn-location">
              ржПрж▓рж╛ржХрж╛
            </Button>
          </Col>
        </Row>

        <Row className="g-4 text-center mb-5">
          {categories.map(({ icon, title, subtitle, count }, idx) => (
            <Col md={3} key={idx}>
              <Card className="category-card">
                <div className="icon">{icon}</div>
                <h5>{title}</h5>
                <p>{subtitle}</p>
                <Badge bg="light" text="muted" className="count-badge">
                  {count}
                </Badge>
              </Card>
            </Col>
          ))}
        </Row>

        <h4 className="mb-3 fw-bold">ржмрж┐рж╢рзЗрж╖ ржЕржлрж╛рж░</h4>
        <Row className="mb-4">
          {specialOffers.map(({ title, description, validity, code }, idx) => (
            <Col md={6} key={idx}>
              <Card className="special-offer-card p-3">
                <h5>{title}</h5>
                <p>{description}</p>
                <small className="text-muted">
                  {validity} | ржХрзЛржб: <code>{code}</code>
                </small>
                <Button variant="warning" size="sm" className="btn-offer mt-3">
                  ржЕржлрж╛рж░ ржкрж╛ржи
                </Button>
              </Card>
            </Col>
          ))}
        </Row>

        <Tab.Container activeKey={activeTab} onSelect={setActiveTab}>
          <Nav variant="tabs" className="marketplace-tabs mb-4 justify-content-center">
            <Nav.Item><Nav.Link eventKey="products">ржкржгрзНржпрж╕ржорзВрж╣</Nav.Link></Nav.Item>
            <Nav.Item><Nav.Link eventKey="suppliers">рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА</Nav.Link></Nav.Item>
            <Nav.Item><Nav.Link eventKey="services">рж╕рзЗржмрж╛рж╕ржорзВрж╣</Nav.Link></Nav.Item>
          </Nav>

          <Tab.Content>
            <Tab.Pane eventKey="products">
              <Row className="g-3">
                {products.slice(0, visibleProducts).map((p, idx) => (
                  <Col md={4} key={idx}>
                    <Card className="product-card">
                      <Row className="align-items-center g-3">
                        <Col md={2} className="product-icon">
                          {p.category === "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛" && "ЁЯМ╛"}
                          {p.category === "ржорзОрж╕рзНржп ржЪрж╛рж╖" && "ЁЯРЯ"}
                          {p.category === "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░" && "ЁЯРД"}
                          {p.category === "ржпржирзНрждрзНрж░ржкрж╛рждрж┐" && "ЁЯЪЬ"}
                          {p.category === "ржФрж╖ржз ржУ ржнрзНржпрж╛ржХрж╕рж┐ржи" && "ЁЯТЙ"}
                        </Col>
                        <Col md={10}>
                          <div className="d-flex justify-content-between align-items-center mb-2">
                            {p.tag && (
                              <Badge
                                bg={p.tag === "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо" ? "dark" : "danger"}
                                className="fw-semibold"
                              >
                                {p.tag}
                              </Badge>
                            )}
                            {p.discountPercent > 0 && (
                              <Badge bg="danger" className="fw-semibold">
                                {p.discountPercent}% ржЫрж╛ржбрж╝
                              </Badge>
                            )}
                          </div>
                          <h5 className="fw-semibold">{p.title}</h5>
                          <small className="text-muted fst-italic">{p.subtitle}</small>
                          <p className="my-2">{p.desc}</p>
                          <p className="price-section">
                            {p.price.toLocaleString()} ржЯрж╛ржХрж╛
                            {p.originalPrice > 0 && (
                              <span className="original-price">
                                <del>{p.originalPrice.toLocaleString()} ржЯрж╛ржХрж╛</del>
                              </span>
                            )}
                          </p>
                          <p className="text-muted mb-1">{p.unit}</p>
                          <div className="rating">тШЕ {p.rating} ({p.ratingCount})</div>
                          <p className="stock">рж╕рзНржЯржХрзЗ ржЖржЫрзЗ</p>
                          <Button variant="success" className="w-100" size="sm">
                            ржХрж╛рж░рзНржЯрзЗ ржпрзЛржЧ ржХрж░рзБржи
                          </Button>
                        </Col>
                      </Row>
                    </Card>
                  </Col>
                ))}
              </Row>
            </Tab.Pane>
            <Tab.Pane eventKey="suppliers">
              <p className="text-center text-muted">рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА рждржерзНржп ржЖрж╕ржЫрзЗ...</p>
            </Tab.Pane>
            <Tab.Pane eventKey="services">
              <p className="text-center text-muted">рж╕рзЗржмрж╛ рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп ржЖрж╕ржЫрзЗ...</p>
            </Tab.Pane>
          </Tab.Content>
        </Tab.Container>

        {/* ржЬржиржкрзНрж░рж┐ржпрж╝ ржкржгрзНржп */}
        <div className="mt-5">
          <h4 className="fw-bold mb-4">ржЬржиржкрзНрж░рж┐ржпрж╝ ржкржгрзНржп</h4>
          <Row className="g-3">
            {products.slice(0, 3).map((p, idx) => (
              <Col md={4} key={`popular-${idx}`}>
                <Card className="product-card">
                  <Row className="align-items-center g-3">
                    <Col md={2} className="product-icon">
                      {p.category === "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛" && "ЁЯМ╛"}
                      {p.category === "ржорзОрж╕рзНржп ржЪрж╛рж╖" && "ЁЯРЯ"}
                      {p.category === "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░" && "ЁЯРД"}
                    </Col>
                    <Col md={10}>
                      <div className="d-flex justify-content-between align-items-center mb-2">
                        <Badge bg="danger">ржЬржиржкрзНрж░рж┐ржпрж╝</Badge>
                        {p.discountPercent > 0 && (
                          <Badge bg="danger">{p.discountPercent}% ржЫрж╛ржбрж╝</Badge>
                        )}
                      </div>
                      <h5 className="fw-semibold">{p.title}</h5>
                      <small className="text-muted fst-italic">{p.subtitle}</small>
                      <p className="my-2">{p.desc}</p>
                      <p className="price-section">
                        {p.price.toLocaleString()} ржЯрж╛ржХрж╛
                        {p.originalPrice > 0 && (
                          <span className="original-price">
                            <del>{p.originalPrice.toLocaleString()} ржЯрж╛ржХрж╛</del>
                          </span>
                        )}
                      </p>
                      <p className="text-muted mb-1">{p.unit}</p>
                      <div className="rating">тШЕ {p.rating} ({p.ratingCount})</div>
                      <p className="stock">рж╕рзНржЯржХрзЗ ржЖржЫрзЗ</p>
                      <div className="d-flex justify-content-between align-items-center">
                        <Button variant="success" size="sm">
                          ржХрж╛рж░рзНржЯрзЗ ржпрзЛржЧ ржХрж░рзБржи
                        </Button>
                        <div className="d-flex gap-2">
                          <Button variant="outline-primary" size="sm">
                            ЁЯУЮ
                          </Button>
                          <Button variant="outline-secondary" size="sm">
                            ЁЯТм
                          </Button>
                        </div>
                      </div>
                    </Col>
                  </Row>
                </Card>
              </Col>
            ))}
          </Row>
        </div>
      </Container>
    </div>
  );
};

export default Marketplace;
