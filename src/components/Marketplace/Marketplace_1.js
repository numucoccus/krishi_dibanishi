import './Marketplace_2.css';
import React, { useState, useEffect } from "react";
import { Container, Row, Col, Card, Button, Form, Badge, Tab, Nav } from "react-bootstrap";

const categories = [
  { icon: "ЁЯМ╛", title: "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛", subtitle: "Seeds & Seedlings", count: "рзирзйрзк ржкржгрзНржп" },
  { icon: "ЁЯЪЬ", title: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐", subtitle: "Equipment", count: "рззрзорзп ржкржгрзНржп" },
  { icon: "ЁЯРД", title: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░", subtitle: "Feed & Fertilizer", count: "рззрзлрзм ржкржгрзНржп" },
  { icon: "ЁЯТЙ", title: "ржФрж╖ржз ржУ ржнрзНржпрж╛ржХрж╕рж┐ржи", subtitle: "Medicine & Vaccines", count: "рзпрзо ржкржгрзНржп" },
];


const TrendingNow = () => (
  <div className="mt-5">
    <Card className="p-4">
      <h5 className="fw-bold mb-3 text-success">ЁЯУИ ржПржЗ ржорзБрж╣рзВрж░рзНрждрзЗ ржЬржиржкрзНрж░рж┐ржпрж╝</h5>
      <p className="text-muted">рж╕ржмржЪрзЗржпрж╝рзЗ ржмрзЗрж╢рж┐ ржЦрзЛржБржЬрж╛ ржкржгрзНржпрж╕ржорзВрж╣</p>
      <ul className="list-unstyled mb-0">
        {[
          "ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржмрзАржЬ",
          "рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржкрзЛржирж╛",
          "ржЗржЙрж░рж┐ржпрж╝рж╛ рж╕рж╛рж░",
          "ржкрж╛ржУрзЯрж╛рж░ ржЯрж┐рж▓рж╛рж░",
          "ржЧрж╛ржнрзАрж░ ржЦрж╛ржжрзНржп",
        ].map((item, index) => (
          <li
            key={index}
            className="d-flex justify-content-between align-items-center"
          >
            #{index + 1} {item}
            <span className="text-success">ЁЯУИ</span>
          </li>
        ))}
      </ul>
    </Card>
  </div>
);

const BecomeSeller = () => (
  <div className="mt-5">
    <Card className="p-4" style={{ backgroundColor: "#eaf5f8", border: "1px solid #b7e1ff", borderRadius: "8px" }}>
      <h4 className="fw-bold mb-3 text-center" style={{ fontWeight: "700" }}>
        ржмрж┐ржХрзНрж░рзЗрждрж╛ рж╣ржпрж╝рзЗ ржЙржарзБржи
      </h4>
      <p className="text-center mb-4" style={{ fontSize: "16px", color: "#3a3a3a" }}>
        ржЖржкржирж╛рж░ ржХрзГрж╖рж┐ ржкржгрзНржп ржмрж╛ рж╕рзЗржмрж╛ ржмрж┐ржХрзНрж░ржпрж╝ ржХрж░рзБржи ржПржмржВ рж╕рж╛рж░рж╛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржХрзГрж╖ржХржжрзЗрж░ ржХрж╛ржЫрзЗ ржкрзМржБржЫрж╛ржиред ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржмрзНржпржмрж╕рж╛ рж╢рзБрж░рзБ ржХрж░рзБржиред
      </p>
      <div className="d-flex justify-content-center gap-3">
        <Button variant="success">ржмрж┐ржХрзНрж░рзЗрждрж╛ рж╣рж┐рж╕рзЗржмрзЗ ржпрзЛржЧ ржжрж┐ржи</Button>
        <Button variant="light" style={{ border: "1px solid #ccc" }}>ржЖрж░ржУ ржЬрж╛ржирзБржи</Button>
      </div>
    </Card>
  </div>
);


const specialOffers = [
  {
    title: "ржорзМрж╕рзБржорзА ржЫрж╛ржбрж╝",
    description: "рж╕ржм ржзрж░ржирзЗрж░ ржмрзАржЬрзЗ рзирзж% ржкрж░рзНржпржирзНржд ржЫрж╛ржбрж╝",
    validity: "ржмрзИржзрждрж╛: рзйрзз ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐ ржкрж░рзНржпржирзНржд",
    code: "WINTER20",
  },
  {
    title: "ржмрж╛рж▓рзНржХ ржЕрж░рзНржбрж╛рж░рзЗрж░ ржЫрж╛ржбрж╝",
    description: "рззрзж,рзжрзжрзж ржЯрж╛ржХрж╛рж░ ржмрзЗрж╢рж┐ ржХрзЗржирж╛ржХрж╛ржЯрж╛ржпрж╝ рззрзл% ржЫрж╛ржбрж╝",
    validity: "ржмрзИржзрждрж╛: рззрзл ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐ ржкрж░рзНржпржирзНржд",
    code: "BULK15",
  },
];

const products = [
  {
    category: "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛",
    tag: "рж╕рзЗрж░рж╛ ржмрж┐ржХрзНрж░рзЗрждрж╛",
    discountPercent: 15,
    discountTag: "ржЫрж╛ржбрж╝",
    title: "ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржЙржЪрзНржЪ ржлрж▓ржирж╢рзАрж▓ ржмрзАржЬ",
    subtitle: "BRRI Dhan29 High Yield Seeds",
    desc: "ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗ ржЙрзОржкрж╛ржжрж┐ржд рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржирзЗрж░ ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржмрзАржЬ, ржЙржЪрзНржЪ ржлрж▓ржирж╢рзАрж▓ ржУ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзА",
    location:"ржХрзГрж╖рж┐ ржмрзАржЬ ржнржмржи, ржЧрж╛ржЬрзАржкрзБрж░, ржврж╛ржХрж╛",
    stock: true,
    price: 85,
    originalPrice: 100,
    unit: "ржкрзНрж░рждрж┐ ржХрзЗржЬрж┐",
    rating: 4.8,
    ratingCount: 156,
  },
  {
    category: "ржорзОрж╕рзНржп ржЪрж╛рж╖",
    tag: "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо",
    discountPercent: 0,
    discountTag: "",
    title: "рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржорж╛ржЫрзЗрж░ ржкрзЛржирж╛ (рзй-рзк ржЗржЮрзНржЪрж┐)",
    subtitle: "Tilapia Fish Fry (3-4 inches)",
    desc: "рж╕рзНржмрж╛рж╕рзНржерзНржпржмрж╛ржи ржУ ржжрзНрж░рзБржд ржмрж░рзНржзржирж╢рзАрж▓ рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржкрзЛржирж╛, ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐рж╕рж╣ рж╕рж░ржмрж░рж╛рж╣",
    location: "рж╕рзБржирзНржжрж░ржмржи ржорзОрж╕рзНржп ржЦрж╛ржорж╛рж░, ржЦрзБрж▓ржирж╛",
    stock: true,
    price: 25,
    originalPrice: 0,
    unit: "ржкрзНрж░рждрж┐ рззрзжрзжржЯрж┐",
    rating: 4.9,
    ratingCount: 89,
  },
  {
    category: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░",
    tag: "ржЬржиржкрзНрж░рж┐ржпрж╝",
    discountPercent: 7,
    discountTag: "ржЫрж╛ржбрж╝",
    title: "ржЧрж╛ржнрзАрж░ ржЬржирзНржп рж╕рзБрж╕ржо ржЦрж╛ржжрзНржп (рзлрзж ржХрзЗржЬрж┐)",
    subtitle: "Balanced Cattle Feed (50kg)",
    desc: "ржЧрж╛ржнрзАрж░ ржжрзБржз ржЙрзОржкрж╛ржжржи ржмрзГржжрзНржзрж┐рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржкрзНрж░рж╕рзНрждрзБрждржХрзГржд ржкрзБрж╖рзНржЯрж┐ржХрж░ ржЦрж╛ржжрзНржп",
    location: "ржкрзНрж░рж╛ржг ржПржЧрзНрж░рзЛ рж▓рж┐ржорж┐ржЯрзЗржб, ржирж╛рж░рж╛ржпрж╝ржгржЧржЮрзНржЬ, ржврж╛ржХрж╛",
    stock: true,
    price: 1850,
    originalPrice: 2000,
    unit: "ржкрзНрж░рждрж┐ ржмрж╕рзНрждрж╛",
    rating: 4.7,
    ratingCount: 234,
  },
{
    category: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░",
    tag: "ржирждрзБржи",
    discountPercent: 0,
    discountTag: "",
    title: "ржмрзНрж░ржпрж╝рж▓рж╛рж░ рж╕рзНржЯрж╛рж░рзНржЯрж╛рж░ ржлрж┐ржб (рзирзл ржХрзЗржЬрж┐)",
    subtitle: "Broiler Starter Feed (25kg)",
    desc: "ржмрзНрж░ржпрж╝рж▓рж╛рж░ ржорзБрж░ржЧрж┐рж░ ржкрзНрж░ржержо рзй рж╕ржкрзНрждрж╛рж╣рзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ рж╕рзНржЯрж╛рж░рзНржЯрж╛рж░ ржлрж┐ржб",
    location: "ржХрж┐ржЙржПржлржПрж╕ ржкрзЛрж▓рзНржЯрзНрж░рж┐, ржХрзБржорж┐рж▓рзНрж▓рж╛",
    stock: true,
    price: 1450,
    originalPrice: 0,
    unit: "ржкрзНрж░рждрж┐ ржмрж╕рзНрждрж╛",
    rating: 4.6,
    ratingCount: 167,
  },
  {
    category: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐",
    tag: "ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐",
    discountTaka: 10000,
    discountTag: "ржЯрж╛ржХрж╛ ржЫрж╛ржбрж╝",
    title: "ржкрж╛ржУржпрж╝рж╛рж░ ржЯрж┐рж▓рж╛рж░ (рззрзи ржПржЗржЪржкрж┐)",
    subtitle: "Power Tiller (12 HP)",
    desc: "ржЗржпрж╝рж╛ржиржорж╛рж░ ржЗржЮрзНржЬрж┐ржирж╕рж╣ ржЙржЪрзНржЪ ржорж╛ржирзЗрж░ ржкрж╛ржУржпрж╝рж╛рж░ ржЯрж┐рж▓рж╛рж░, рзй ржмржЫрж░рзЗрж░ ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐ ржУ ржлрзНрж░рж┐ рж╕рж╛рж░рзНржнрж┐рж╕",
    location: "ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржХрзГрж╖рж┐ ржпржирзНрждрзНрж░, ржмржЧрзБржбрж╝рж╛",
    stock: true,
    price: 125000,
    originalPrice: 135000,
    unit: "ржкрзНрж░рждрж┐ ржЯрж┐",
    rating: 4.5,
    ratingCount: 45,
  },
  {
    category: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐",
    tag: "ржмрзЗрж╕рзНржЯ рж╕рзЗрж▓рж╛рж░",
    discountTaka: 3500,
    discountTag: "ржЯрж╛ржХрж╛ ржЫрж╛ржбрж╝",
    title: "ржПрж░рзЛржЯрж░ ржорзЗрж╢рж┐ржи (ржорж╛ржЫрзЗрж░ ржкрзБржХрзБрж░рзЗрж░ ржЬржирзНржп)",
    subtitle: "Aerator Machine (For Fish Pond)",
    desc: "ржорж╛ржЫрзЗрж░ ржкрзБржХрзБрж░рзЗ ржЕржХрзНрж╕рж┐ржЬрзЗржи рж╕рж░ржмрж░рж╛рж╣рзЗрж░ ржЬржирзНржп ржЙржирзНржиржд ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржПрж░рзЛржЯрж░, ржХржо ржмрж┐ржжрзНржпрзБрзО ржЦрж░ржЪ",
    location: "ржЖржХрзБржпрж╝рж╛ ржЯрзЗржХ рж╕рж▓рж┐ржЙрж╢ржи, ржоржпрж╝ржоржирж╕рж┐ржВрж╣",
    stock: true,
    price: 18500,
    originalPrice: 22000,
    unit: "ржкрзНрж░рждрж┐ ржЯрж┐",
    rating: 4.8,
    ratingCount: 67,
  },
];


const suppliers = [
  {
    category: "ржмрзАржЬ ржУ рж╕рж╛рж░ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ",
    tag: "ржпрж╛ржЪрж╛ржЗржХрзГржд",
    title: "рж╕рзБржирзНржжрж░ржмржи ржПржЧрзНрж░рзЛ",
    subtitle: "ржмрзАржЬ ржУ рж╕рж╛рж░ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ",
    desc: "ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ: ржзрж╛ржирзЗрж░ ржмрзАржЬ, рж╕ржмржЬрж┐рж░ ржмрзАржЬ, ржлрж▓рзЗрж░ рж╕рж╛рж░",
    location: "ржЦрзБрж▓ржирж╛",
    stock: true,
    experience: 15,
    productCount: 145,
    rating: 4.9,
    ratingCount: 145,
    unit: ""
  },
  {
    category: "ржорзОрж╕рзНржп ржЪрж╛рж╖ рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА",
    tag: "ржпрж╛ржЪрж╛ржЗржХрзГржд",
    title: "ржмрж╛ржВрж▓рж╛ ржорзОрж╕рзНржп рж╕рзЗржирзНржЯрж╛рж░",
    subtitle: "ржорзОрж╕рзНржп ржЪрж╛рж╖ рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА",
    desc: "ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ: ржорж╛ржЫрзЗрж░ ржкрзЛржирж╛, ржорзОрж╕рзНржп ржЦрж╛ржжрзНржп, ржЯрж┐ржбрж┐ ржкрзЗрж╕рзНржЯ рж▓рж╛рж░рзНржнрж╛",
    location: "ржХржХрзНрж╕ржмрж╛ржЬрж╛рж░",
    stock: true,
    experience: 12,
    productCount: 89,
    rating: 4.8,
    ratingCount: 89,
    unit: ""
  },
  {
    category: "ржкрзЛрж▓рзНржЯрзНрж░рж┐ рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА",
    tag: "ржпрж╛ржЪрж╛ржЗржХрзГржд",
    title: "рж░ржлрзЗрж▓ ржкрзЛрж▓рзНржЯрзНрж░рж┐ рж╕рж╛ржкрзНрж▓рж╛ржЗ",
    subtitle: "ржкрзЛрж▓рзНржЯрзНрж░рж┐ рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА",
    desc: "ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ: ржорзБрж░ржЧрж┐рж░ ржЦрж╛ржжрзНржп, ржнрзНржпрж╛ржХрж╕рж┐ржи, ржкрзЛрж▓рзНржЯрзНрж░рж┐ ржпржирзНрждрзНрж░ржкрж╛рждрж┐",
    location: "ржЧрж╛ржЬрзАржкрзБрж░",
    stock: true,
    experience: 10,
    productCount: 67,
    rating: 4.7,
    ratingCount: 67,
    unit: ""
  },
  {
    category: "рж╕рж╛рж░рзНржмрж┐ржХржкрзБрж╖рзНржЯрж┐ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ",
    tag: "ржпрж╛ржЪрж╛ржЗржХрзГржд",
    title: "ржкрзНрж░рж╛ржгрж┐рж╕ржорзНржкржж рж╕рзЗржмрж╛ ржХрзЗржирзНржжрзНрж░",
    subtitle: "рж╕рж╛рж░рзНржмрж┐ржХржкрзБрж╖рзНржЯрж┐ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ",
    desc: "ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ: ржЧржмрж╛ржжрж┐ржкрж╢рзБ ржЦрж╛ржжрзНржп, ржкрзБрж╖рзНржЯрж┐ ржЙржкржХрж░ржг, ржжрзБржз ржЙрзОржкрж╛ржжржи рж╕рж╣рж╛ржпрж╝рждрж╛",
    location: "ржкрж╛ржмржирж╛",
    stock: true,
    experience: 18,
    productCount: 156,
    rating: 4.8,
    ratingCount: 156,
    unit: ""
  }
];



const Marketplace = () => {
  const [activeTab, setActiveTab] = useState("products");
  const [visibleProducts, setVisibleProducts] = useState(6);

  useEffect(() => {
    const onScroll = () => {
      if (
        window.innerHeight + window.scrollY >=
        document.body.offsetHeight - 300
      ) {
        setVisibleProducts((prev) =>
          Math.min(prev + 1, products.length)
        );
      }
    };
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, []);

  return (
    <div className="marketplace-section">
      <Container>
        <div className="marketplace-header text-center mb-5">
          <h2 className="fw-bold">ржХрзГрж╖рж┐ ржжрж┐ржмрж╛ржирж┐рж╢рж┐ ржорж╛рж░рзНржХрзЗржЯржкрзНрж▓рзЗрж╕</h2>
          <p className="text-muted">Krishi Dibanishi Marketplace</p>
          <p className="text-muted fs-6 mx-auto" style={{ maxWidth: "600px" }}>
            ржХрзГрж╖рж┐, ржорзОрж╕рзНржп ржУ ржкрзНрж░рж╛ржгрж┐рж╕ржорзНржкржжрзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рж╕ржХрж▓ ржкржгрзНржп ржУ рж╕рзЗржмрж╛ ржПржХ
            ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ред ржмрж┐рж╢рзНржмрж╕рзНржд ржмрж┐ржХрзНрж░рзЗрждрж╛ ржУ рж╕рж╛рж╢рзНрж░ржпрж╝рзА ржорзВрж▓рзНржпред
          </p>
        </div>

        <Row className="mb-4 justify-content-center align-items-center">
          <Col md={6}>
            <Form.Control
              type="text"
              placeholder="ржкржгрзНржп, ржмрзАржЬ, ржпржирзНрждрзНрж░ржкрж╛рждрж┐ ржмрж╛ рж╕рзЗржмрж╛ ржЦрзБржБржЬрзБржи..."
              className="search-input"
            />
          </Col>
          <Col md="auto" className="d-flex gap-2">
            <Button variant="outline-secondary" className="btn-filter">
              ржлрж┐рж▓рзНржЯрж╛рж░
            </Button>
            <Button variant="outline-secondary" className="btn-location">
              ржПрж▓рж╛ржХрж╛
            </Button>
          </Col>
        </Row>

        <Row className="g-4 text-center mb-5">
          {categories.map(({ icon, title, subtitle, count }, idx) => (
            <Col md={3} key={idx}>
              <Card className="category-card">
                <div className="icon">{icon}</div>
                <h5>{title}</h5>
                <p>{subtitle}</p>
                <Badge bg="light" text="muted" className="count-badge">
                  {count}
                </Badge>
              </Card>
            </Col>
          ))}
        </Row>

        <h4 className="mb-3 fw-bold">ржмрж┐рж╢рзЗрж╖ ржЕржлрж╛рж░</h4>
        <Row className="mb-4">
          <Row className="mb-4">
          {specialOffers.map(({ title, description, validity, code }, idx) => (
            <Col md={6} key={idx}>
              <Card className="special-offer-card p-3">
                <h5>{title}</h5>
                <p>{description}</p>
                <small className="text-muted">
                  {validity} | ржХрзЛржб: <code>{code}</code>
                </small>
                <Button variant="warning" size="sm" className="btn-offer mt-3">
                  ржЕржлрж╛рж░ ржкрж╛ржи
                </Button>
              </Card>
            </Col>
          ))}
        </Row>
        </Row>

         <Tab.Container activeKey={activeTab} onSelect={setActiveTab}>
          <Nav variant="tabs" className="marketplace-tabs mb-4 justify-content-center">
            <Nav.Item><Nav.Link eventKey="products">ржкржгрзНржпрж╕ржорзВрж╣</Nav.Link></Nav.Item>
            <Nav.Item><Nav.Link eventKey="suppliers">рж╕рж░ржмрж░рж╛рж╣ржХрж╛рж░рзА</Nav.Link></Nav.Item>
            <Nav.Item><Nav.Link eventKey="services">рж╕рзЗржмрж╛рж╕ржорзВрж╣</Nav.Link></Nav.Item>
          </Nav>

          <Tab.Content>
            <Tab.Pane eventKey="products">
              <div className="mt-5">
                <h4 className="fw-bold mb-4">ржЬржиржкрзНрж░рж┐ржпрж╝ ржкржгрзНржп</h4>
                <Row className="g-3">
                  {products.slice(0, visibleProducts).map((p, idx) => (
                    <Col md={4} key={idx}>
                      <Card className="product-card">
                        <Row className="align-items-center g-3">
                          <Col md={2} className="product-icon">
                            {p.category === "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛" && "ЁЯМ╛"}
                            {p.category === "ржорзОрж╕рзНржп ржЪрж╛рж╖" && "ЁЯРЯ"}
                            {p.category === "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░" && "ЁЯРД"}
                            {p.category === "ржпржирзНрждрзНрж░ржкрж╛рждрж┐" && "ЁЯЪЬ"}
                            {p.category === "ржФрж╖ржз ржУ ржнрзНржпрж╛ржХрж╕рж┐ржи" && "ЁЯТЙ"}
                          </Col>
                          <Col md={10}>
                            <div className="badge-container d-flex flex-column align-items-end gap-1 mb-2" style={{ minHeight: '40px' }}>
                              {p.tag && (
                                <Badge bg={p.tag === "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо" ? "dark" : "light"} text={p.tag === "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо" ? "light" : "dark"} className="fw-semibold border">
                                  {p.tag}
                                </Badge>
                              )}
                              {p.discountPercent > 0 && (
                                <Badge bg="danger" className="fw-semibold">
                                  {p.discountPercent}% ржЫрж╛ржбрж╝
                                </Badge>
                              )}
                              {p.discountTaka > 0 && (
                                <Badge bg="danger" className="fw-semibold">
                                  {p.discountTaka} ржЯрж╛ржХрж╛ ржЫрж╛ржбрж╝
                                </Badge>
                              )}
                            </div>
                            <div className="mb-2">
                              <Badge bg="light" text="dark" className="fw-semibold border">
                                {p.category}
                              </Badge>
                            </div>
                            <h5 className="fw-semibold">{p.title}</h5>
                            <small className="text-muted fst-italic">{p.subtitle}</small>
                            <p className="my-2">{p.desc}</p>
                            <p className="price-section">
                              {p.price.toLocaleString()} ржЯрж╛ржХрж╛
                              {p.originalPrice > 0 && (
                                <span className="original-price">
                                  <del>{p.originalPrice.toLocaleString()} ржЯрж╛ржХрж╛</del>
                                </span>
                              )}
                            </p>
                            <p className="text-muted mb-1">{p.unit}</p>
                            <div className="rating">тШЕ {p.rating} ({p.ratingCount})</div>
                            <div className="d-flex justify-content-between align-items-center mb-2">
                              <small className="text-muted">ЁЯУН{p.location}</small>
                              <Badge bg="success" className="fw-semibold">рж╕рзНржЯржХрзЗ ржЖржЫрзЗ</Badge>
                            </div>
                            <div className="d-flex gap-2 align-items-center">
                              <Button variant="success" size="sm" className="flex-grow-1">ржХрж╛рж░рзНржЯрзЗ ржпрзЛржЧ ржХрж░рзБржи</Button>
                              <Button variant="outline-primary" size="sm">ЁЯУЮ</Button>
                              <Button variant="outline-secondary" size="sm">ЁЯТм</Button>
                            </div>
                          </Col>
                        </Row>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </div>
            </Tab.Pane>

            <Tab.Pane eventKey="suppliers">
  <div className="suppliers-grid">
    {suppliers.map((supplier, index) => (
      <div key={index} className="supplier-card">
        <div className="supplier-header">
          <div className="supplier-initial">{supplier.title.charAt(0)}</div>
          <div>
            <h5 className="supplier-title">{supplier.title} <span className="tag">{supplier.tag}</span></h5>
            <p className="supplier-subtitle">{supplier.subtitle}</p>
            <p className="supplier-location">
              <i className="location-icon"></i> {supplier.location}
            </p>
          </div>
        </div>

        <div className="supplier-info">
          <div>
            <div className="label">ржЕржнрж┐ржЬрзНржЮрждрж╛</div>
            <div className="value">{supplier.experience} ржмржЫрж░</div>
          </div>
          <div>
            <div className="label">ржкржгрзНржп</div>
            <div className="value">{supplier.productCount}</div>
          </div>
          <div className="rating">
            <span className="star">тнР</span> {supplier.rating.toFixed(1)}
          </div>
        </div>
        <div className="supplier-specialization-label">ржмрж┐рж╢рзЗрж╖рждрзНржм:</div>

        <div className="supplier-expert-tags">
          {supplier.desc.replace('ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ: ', '').split(', ').map((tag, i) => (
            <span key={i} className="expert-tag">{tag}</span>
          ))}
        </div>

        <div className="supplier-actions">
          <button className="btn-profile">ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржжрзЗржЦрзБржи</button>
          <button className="btn-contact">ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи</button>
        </div>
      </div>
    ))}
  </div>
</Tab.Pane>



            <Tab.Pane eventKey="services">
              <p className="text-center text-muted">рж╕рзЗржмрж╛ рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп ржЖрж╕ржЫрзЗ...</p>
            </Tab.Pane>
          </Tab.Content>
        </Tab.Container>
        <TrendingNow />
       < BecomeSeller />
      </Container>
    </div>
  );
};

export default Marketplace;
