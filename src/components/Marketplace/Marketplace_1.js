import React, { useState, useEffect } from "react";
import { useLocation, Link } from "react-router-dom";
import { Container, Row, Col, Card, Button, Tab, Nav, Badge,Form } from "react-bootstrap";
import './Marketplace_2.css';
import { io } from "socket.io-client";
import AddProducts from "./AddProducts";
import axios from "../../api";
const socket = io("http://localhost:5000");


// ==================== SupplierDashboard Component ====================
const SupplierDashboard = () => {
  const storedUser = JSON.parse(localStorage.getItem("user"));
const [user, setUser] = useState(storedUser || {}); 
const [showAdd, setShowAdd] = useState(false);
const [productsList, setProductsList] = useState([]); // Optional: supplier products ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп

const handleAddProductClick = () => setShowAdd(true);
const handleClose = () => setShowAdd(false);

const handleProductAdded = (newProduct) => {
  setProductsList(prev => [newProduct, ...prev]);
};



  return (
     <>
    {/* Navbar */}

       <nav className="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
       <div className="container">
        <Link className="navbar-brand fw-bold text-success" to="/home">
          BD <span className="text-dark">ржХрзГрж╖рж┐ ржжрж┐ржмрж╛ржирж┐рж╢рж┐</span>
        </Link>

        <button className="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#MarketplaceNavbar">
          <span className="navbar-toggler-icon"></span>
        </button>

        <div className="collapse navbar-collapse justify-content-between" id="MarketplaceNavbar">
          <ul className="navbar-nav mx-auto mb-2 mb-lg-0">
  <li className="nav-item">
    <Link className="nav-link" to="/home">рж╣рзЛржо</Link>
  </li>
  <li className="nav-item">
    <Link className="nav-link" to="/dashboard">ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб</Link>
  </li>
  <li className="nav-item">
    <Link className="nav-link" to="/community">ржХржорж┐ржЙржирж┐ржЯрж┐</Link>
  </li>
  <li className="nav-item">
    <Link className="nav-link" to="/resources">рж░рж┐рж╕рзЛрж░рзНрж╕</Link>
  </li>
  <li className="nav-item">
    <Link className="nav-link" to="/market" state={{ supplierView: true }}>
      ржмрж╛ржЬрж╛рж░
    </Link>
  </li>
</ul>
         <div className="d-flex">
            <button className="btn btn-success me-2">ржХрзГрж╖ржХ</button>
          </div>
        </div>
      </div>
     </nav>

  <div className="marketplace-section">
      <Container>
        <div className="marketplace-header text-center mb-5">
          <h2 className="fw-bold">ржХрзГрж╖рж┐ ржжрж┐ржмрж╛ржирж┐рж╢рж┐ ржорж╛рж░рзНржХрзЗржЯржкрзНрж▓рзЗрж╕</h2>
          <p className="text-muted">Krishi Dibanishi Marketplace</p>
          <p className="text-muted fs-6 mx-auto" style={{ maxWidth: "600px" }}>
            ржХрзГрж╖рж┐, ржорзОрж╕рзНржп ржУ ржкрзНрж░рж╛ржгрж┐рж╕ржорзНржкржжрзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рж╕ржХрж▓ ржкржгрзНржп ржУ рж╕рзЗржмрж╛ ржПржХ
            ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ред ржмрж┐рж╢рзНржмрж╕рзНржд ржмрж┐ржХрзНрж░рзЗрждрж╛ ржУ рж╕рж╛рж╢рзНрж░ржпрж╝рзА ржорзВрж▓рзНржпред
          </p>
        </div>

        <Row className="g-4">

  {/* ржкржгрзНржп ржмрж┐ржХрзНрж░рзЯ ржХрж░рзБржи */}
  <Col md={4}>
    <Card className="supplier-card">
      <h5>ЁЯУж ржкржгрзНржп ржмрж┐ржХрзНрж░рзЯ ржХрж░рзБржи</h5>
      <p>ржЖржкржирж╛рж░ рж╕ржХрж▓ рждрж╛рж▓рж┐ржХрж╛ржнрзБржХрзНржд ржкржгрзНржп ржжрзЗржЦрзБржи, ржорзНржпрж╛ржирзЗржЬ ржХрж░рзБржи ржПржмржВ ржирждрзБржи ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржиред</p>
      <div className="d-flex flex-column gap-2">
        <Button variant="success" onClick={handleAddProductClick}>тЮХ ржирждрзБржи ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржи</Button>
          <AddProducts
  show={showAdd}
  handleClose={handleClose}
  onProductAdded={handleProductAdded}
/>
  {/* Optional: productsList ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп */}
      <div>
        {productsList.map(p => (
          <div key={p._id}>{p.title} - {p.price} ржЯрж╛ржХрж╛</div>
        ))}
      </div>
 <Button variant="outline-primary">ЁЯУЛ рж╕ржм ржкржгрзНржп ржжрзЗржЦрзБржи</Button>
      </div>
    </Card>
  </Col>

  {/* ржЕрж░рзНржбрж╛рж░рж╕ржорзВрж╣ */}
  <Col md={4}>
    <Card className="supplier-card">
      <h5>ЁЯЫТ ржЕрж░рзНржбрж╛рж░рж╕ржорзВрж╣</h5>
      <p>ржЖржкржирж╛рж░ рж╕ржХрж▓ ржЕрж░рзНржбрж╛рж░ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рзБржи ржПржмржВ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕ ржЖржкржбрзЗржЯ ржХрж░рзБржиред</p>
      <div className="d-flex flex-column gap-2">
        <Button variant="success">ЁЯУж ржирждрзБржи ржЕрж░рзНржбрж╛рж░ ржжрзЗржЦрзБржи</Button>
        <Button variant="outline-primary">ЁЯУК ржЕрж░рзНржбрж╛рж░ рж╣рж┐рж╕рзНржЯрзНрж░рж┐</Button>
      </div>
    </Card>
  </Col>


  {/* ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи */}
  <Col md={4}>
    <Card className="supplier-card">
      <h5>ЁЯФФ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи</h5>
      <p>ржирждрзБржи ржЕрж░рзНржбрж╛рж░, ржЧрзНрж░рж╛рж╣ржХрзЗрж░ ржорзЗрж╕рзЗржЬ ржПржмржВ рж╕рж┐рж╕рзНржЯрзЗржо ржЖржкржбрзЗржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржиред</p>
      <div className="d-flex flex-column gap-2">
        <Button variant="success">ЁЯУи ржЗржиржмржХрзНрж╕ ржжрзЗржЦрзБржи</Button>
        <Button variant="outline-primary">тЪЩя╕П рж╕рзЗржЯрж┐ржВрж╕</Button>
      </div>
    </Card>
  </Col>
</Row>
     </Container>
    </div>
    </>
  );
};

// ==================== Marketplace Data ====================
const categories = [
  { icon: "ЁЯМ╛", title: "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛", subtitle: "Seeds & Seedlings", count: "рзирзйрзк ржкржгрзНржп" },
  { icon: "ЁЯЪЬ", title: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐", subtitle: "Equipment", count: "рззрзорзп ржкржгрзНржп" },
  { icon: "ЁЯРД", title: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░", subtitle: "Feed & Fertilizer", count: "рззрзлрзм ржкржгрзНржп" },
  { icon: "ЁЯТЙ", title: "ржФрж╖ржз ржУ ржнрзНржпрж╛ржХрж╕рж┐ржи", subtitle: "Medicine & Vaccines", count: "рзпрзо ржкржгрзНржп" },
];

const TrendingNow = () => (
  <div className="mt-5">
    <Card className="p-4">
      <h5 className="fw-bold mb-3 text-success">ЁЯУИ ржПржЗ ржорзБрж╣рзВрж░рзНрждрзЗ ржЬржиржкрзНрж░рж┐ржпрж╝</h5>
      <p className="text-muted">рж╕ржмржЪрзЗржпрж╝рзЗ ржмрзЗрж╢рж┐ ржЦрзЛржБржЬрж╛ ржкржгрзНржпрж╕ржорзВрж╣</p>
      <ul className="list-unstyled mb-0">
        {[
          "ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржмрзАржЬ",
          "рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржкрзЛржирж╛",
          "ржЗржЙрж░рж┐ржпрж╝рж╛ рж╕рж╛рж░",
          "ржкрж╛ржУрзЯрж╛рж░ ржЯрж┐рж▓рж╛рж░",
          "ржЧрж╛ржнрзАрж░ ржЦрж╛ржжрзНржп",
        ].map((item, index) => (
          <li key={index} className="d-flex justify-content-between align-items-center">
            #{index + 1} {item} <span className="text-success">ЁЯУИ</span>
          </li>
        ))}
      </ul>
    </Card>
  </div>
);

const specialOffers = [
  {
    title: "ржорзМрж╕рзБржорзА ржЫрж╛ржбрж╝",
    description: "рж╕ржм ржзрж░ржирзЗрж░ ржмрзАржЬрзЗ рзирзж% ржкрж░рзНржпржирзНржд ржЫрж╛ржбрж╝",
    validity: "ржмрзИржзрждрж╛: рзйрзз ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐ ржкрж░рзНржпржирзНржд",
    code: "WINTER20",
  },
  {
    title: "ржмрж╛рж▓рзНржХ ржЕрж░рзНржбрж╛рж░рзЗрж░ ржЫрж╛ржбрж╝",
    description: "рззрзж,рзжрзжрзж ржЯрж╛ржХрж╛рж░ ржмрзЗрж╢рж┐ ржХрзЗржирж╛ржХрж╛ржЯрж╛ржпрж╝ рззрзл% ржЫрж╛ржбрж╝",
    validity: "ржмрзИржзрждрж╛: рззрзл ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐ ржкрж░рзНржпржирзНржд",
    code: "BULK15",
  },
];

const services = [
  {
    icon: "ЁЯЪЪ",
    title: "рж╣рзЛржо ржбрзЗрж▓рж┐ржнрж╛рж░рж┐",
    desc: "ржЖржкржирж╛рж░ ржжрзЛрж░ржЧрзЛржбрж╝рж╛ржпрж╝ ржкржгрзНржп ржкрзМржБржЫрзЗ ржжрзЗржУржпрж╝рж╛рж░ рж╕рзЗржмрж╛ред ржврж╛ржХрж╛ рж╢рж╣рж░рзЗ рзирзк ржШржгрзНржЯрж╛ржпрж╝, рж╕рж╛рж░рж╛ржжрзЗрж╢рзЗ рзй-рзл ржжрж┐ржирзЗред",
    price: "рзлрзж ржЯрж╛ржХрж╛ ржерзЗржХрзЗ рж╢рзБрж░рзБ",
    btnText: "ржЕрж░рзНржбрж╛рж░ ржХрж░рзБржи",
    btnDisabled: false,
  },
  {
    icon: "ЁЯСитАНтЪХя╕П",
    title: "ржкрж╢рзБ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛",
    desc: "ржЕржнрж┐ржЬрзНржЮ ржнрзЗржЯрзЗрж░рж┐ржирж╛рж░рж┐ ржбрж╛ржХрзНрждрж╛рж░ржжрзЗрж░ ржХрж╛ржЫ ржерзЗржХрзЗ ржкрж╢рзБ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛ред ржЬрж░рзБрж░рж┐ ржЕржмрж╕рзНржерж╛ржпрж╝ рзирзк/рзн рж╕рзЗржмрж╛ред",
    price: "рзлрзжрзж ржЯрж╛ржХрж╛ ржерзЗржХрзЗ рж╢рзБрж░рзБ",
    btnText: "ржбрж╛ржХрзНрждрж╛рж░ ржбрж╛ржХрзБржи",
    btnDisabled: false,
  },
  {
    icon: "ЁЯФз",
    title: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐ ржорзЗрж░рж╛ржоржд",
    desc: "ржХрзГрж╖рж┐ ржпржирзНрждрзНрж░ржкрж╛рждрж┐ ржорзЗрж░рж╛ржоржд ржУ рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржг рж╕рзЗржмрж╛ред ржжржХрзНрж╖ ржЯрзЗржХржирж┐рж╢рж┐ржпрж╝рж╛ржи ржУ ржЖрж╕рж▓ ржпржирзНрждрзНрж░рж╛ржВрж╢ред",
    price: "рж╕рзЗржо ржбрзЗ рж╕рж╛рж░рзНржнрж┐рж╕",
    btnText: "рж╕рзЗржмрж╛ ржирж┐ржи",
    btnDisabled: false,
  },
];

const products = [
  {
    category: "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛",
    tag: "рж╕рзЗрж░рж╛ ржмрж┐ржХрзНрж░рзЗрждрж╛",
    discountPercent: 15,
    discountTag: "ржЫрж╛ржбрж╝",
    title: "ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржЙржЪрзНржЪ ржлрж▓ржирж╢рзАрж▓ ржмрзАржЬ",
    subtitle: "BRRI Dhan29 High Yield Seeds",
    desc: "ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗ ржЙрзОржкрж╛ржжрж┐ржд рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржирзЗрж░ ржмрзНрж░рж┐ ржзрж╛ржирзирзп ржмрзАржЬ, ржЙржЪрзНржЪ ржлрж▓ржирж╢рзАрж▓ ржУ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзА",
    location:"ржХрзГрж╖рж┐ ржмрзАржЬ ржнржмржи, ржЧрж╛ржЬрзАржкрзБрж░, ржврж╛ржХрж╛",
    stock: true,
    price: 85,
    originalPrice: 100,
    unit: "ржкрзНрж░рждрж┐ ржХрзЗржЬрж┐",
    rating: 4.8,
    ratingCount: 156,
  },
  {
    category: "ржорзОрж╕рзНржп ржЪрж╛рж╖",
    tag: "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо",
    discountPercent: 0,
    discountTag: "",
    title: "рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржорж╛ржЫрзЗрж░ ржкрзЛржирж╛ (рзй-рзк ржЗржЮрзНржЪрж┐)",
    subtitle: "Tilapia Fish Fry (3-4 inches)",
    desc: "рж╕рзНржмрж╛рж╕рзНржерзНржпржмрж╛ржи ржУ ржжрзНрж░рзБржд ржмрж░рзНржзржирж╢рзАрж▓ рждрзЗрж▓рж╛ржкрж┐ржпрж╝рж╛ ржкрзЛржирж╛, ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐рж╕рж╣ рж╕рж░ржмрж░рж╛рж╣",
    location: "рж╕рзБржирзНржжрж░ржмржи ржорзОрж╕рзНржп ржЦрж╛ржорж╛рж░, ржЦрзБрж▓ржирж╛",
    stock: true,
    price: 25,
    originalPrice: 0,
    unit: "ржкрзНрж░рждрж┐ рззрзжрзжржЯрж┐",
    rating: 4.9,
    ratingCount: 89,
  },
  {
    category: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░",
    tag: "ржЬржиржкрзНрж░рж┐ржпрж╝",
    discountPercent: 7,
    discountTag: "ржЫрж╛ржбрж╝",
    title: "ржЧрж╛ржнрзАрж░ ржЬржирзНржп рж╕рзБрж╖ржо ржЦрж╛ржжрзНржп (рзлрзж ржХрзЗржЬрж┐)",
    subtitle: "Balanced Cattle Feed (50kg)",
    desc: "ржЧрж╛ржнрзАрж░ ржжрзБржз ржЙрзОржкрж╛ржжржи ржмрзГржжрзНржзрж┐рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржкрзНрж░рж╕рзНрждрзБрждржХрзГржд ржкрзБрж╖рзНржЯрж┐ржХрж░ ржЦрж╛ржжрзНржп",
    location: "ржкрзНрж░рж╛ржг ржПржЧрзНрж░рзЛ рж▓рж┐ржорж┐ржЯрзЗржб, ржирж╛рж░рж╛ржпрж╝ржгржЧржЮрзНржЬ, ржврж╛ржХрж╛",
    stock: true,
    price: 1850,
    originalPrice: 2000,
    unit: "ржкрзНрж░рждрж┐ ржмрж╕рзНрждрж╛",
    rating: 4.7,
    ratingCount: 234,
  },
{
    category1: "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░",
    tag: "ржирждрзБржи",
    discountPercent: 0,
    discountTag: "",
    title: "ржмрзНрж░ржпрж╝рж▓рж╛рж░ рж╕рзНржЯрж╛рж░рзНржЯрж╛рж░ ржлрж┐ржб (рзирзл ржХрзЗржЬрж┐)",
    subtitle: "Broiler Starter Feed (25kg)",
    desc: "ржмрзНрж░ржпрж╝рж▓рж╛рж░ ржорзБрж░ржЧрж┐рж░ ржкрзНрж░ржержо рзй рж╕ржкрзНрждрж╛рж╣рзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ рж╕рзНржЯрж╛рж░рзНржЯрж╛рж░ ржлрж┐ржб",
    location: "ржХрж┐ржЙржПржЗржЪржПрж╕ ржкрзЛрж▓рзНржЯрзНрж░рж┐, ржХрзБржорж┐рж▓рзНрж▓рж╛",
    stock: true,
    price: 1450,
    originalPrice: 0,
    unit: "ржкрзНрж░рждрж┐ ржмрж╕рзНрждрж╛",
    rating: 4.6,
    ratingCount: 167,
  },
  {
    category: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐",
    tag: "ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐",
    discountTaka: 10000,
    discountTag: "ржЯрж╛ржХрж╛ ржЫрж╛ржбрж╝",
    title: "ржкрж╛ржУржпрж╝рж╛рж░ ржЯрж┐рж▓рж╛рж░ (рззрзи ржПржЗржЪржкрж┐)",
    subtitle: "Power Tiller (12 HP)",
    desc: "ржЗржпрж╝рж╛ржиржорж╛рж░ ржЗржЮрзНржЬрж┐ржирж╕рж╣ ржЙржЪрзНржЪ ржорж╛ржирзЗрж░ ржкрж╛ржУржпрж╝рж╛рж░ ржЯрж┐рж▓рж╛рж░, рзй ржмржЫрж░рзЗрж░ ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐ ржУ ржлрзНрж░рж┐ рж╕рж╛рж░рзНржнрж┐рж╕",
    location: "ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржХрзГрж╖рж┐ ржпржирзНрждрзНрж░, ржмржЧрзБржбрж╝рж╛",
    stock: true,
    price: 125000,
    originalPrice: 135000,
    unit: "ржкрзНрж░рждрж┐ржЯрж┐",
    rating: 4.5,
    ratingCount: 45,
  },
  {
    category: "ржпржирзНрждрзНрж░ржкрж╛рждрж┐",
    tag: "ржмрзЗрж╕рзНржЯ рж╕рзЗрж▓рж╛рж░",
    discountTaka: 3500,
    discountTag: "ржЯрж╛ржХрж╛ ржЫрж╛ржбрж╝",
    title: "ржПрж░рзЛржЯрж░ ржорзЗрж╢рж┐ржи (ржорж╛ржЫрзЗрж░ ржкрзБржХрзБрж░рзЗрж░ ржЬржирзНржп)",
    subtitle: "Aerator Machine (For Fish Pond)",
    desc: "ржорж╛ржЫрзЗрж░ ржкрзБржХрзБрж░рзЗ ржЕржХрзНрж╕рж┐ржЬрзЗржи рж╕рж░ржмрж░рж╛рж╣рзЗрж░ ржЬржирзНржп ржЙржирзНржиржд ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржПрж░рзЛржЯрж░, ржХржо ржмрж┐ржжрзНржпрзБрзО ржЦрж░ржЪ",
    location: "ржЖржХрзБржпрж╝рж╛ ржЯрзЗржХ рж╕рж▓рж┐ржЙрж╢ржи, ржоржпрж╝ржоржирж╕рж┐ржВрж╣",
    stock: true,
    price: 18500,
    originalPrice: 22000,
    unit: "ржкрзНрж░рждрж┐ржЯрж┐",
    rating: 4.8,
    ratingCount: 67,
  },
];


const Marketplace = (props) => {
  const location = useLocation();
  const [supplierView, setSupplierView] = useState(false);
  const [productsState, setProducts] = useState(products); 
  const [activeTab, setActiveTab] = useState("products");
  const [visibleProducts, setVisibleProducts] = useState(6);


    useEffect(() => {
  socket.on("new-product", (product) => {
    setProducts(prev => [product, ...prev]);
  });

  return () => socket.off("new-product");
}, []);



  // Update supplierView based on user or location.state changes
  useEffect(() => {
    const user = JSON.parse(localStorage.getItem("user"));
    if (location.state?.supplierView) {
      setSupplierView(true);
    } else if (user?.role?.toLowerCase() === "supplier") {
      setSupplierView(true);
    } else {
      setSupplierView(false);
    }
  }, [location.state]); // location.state change ржП re-evaluate рж╣ржмрзЗ





useEffect(() => {
  const onScroll = () => {
    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 300) {
      setVisibleProducts(prev => Math.min(prev + 1, productsState.length));
    }
  };
  window.addEventListener("scroll", onScroll);
  return () => window.removeEventListener("scroll", onScroll);
}, [productsState]);


   // ==================== Supplier View ====================
  if (supplierView) return <SupplierDashboard />;


  // ==================== Normal Marketplace UI ====================
 return (
   <>
    {/* Navbar */}

       <nav className="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
       <div className="container">
        <Link className="navbar-brand fw-bold text-success" to="/home">
          BD <span className="text-dark">ржХрзГрж╖рж┐ ржжрж┐ржмрж╛ржирж┐рж╢рж┐</span>
        </Link>

        <button className="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#MarketplaceNavbar">
          <span className="navbar-toggler-icon"></span>
        </button>

        <div className="collapse navbar-collapse justify-content-between" id="MarketplaceNavbar">
          <ul className="navbar-nav mx-auto mb-2 mb-lg-0">
            <li className="nav-item">
              <Link className="nav-link" to="/home">рж╣рзЛржо</Link>
            </li>
            <li className="nav-item">
              <Link className="nav-link" to="/dashboard">ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб</Link>
            </li>
            <li className="nav-item">
              <Link className="nav-link" to="/community">ржХржорж┐ржЙржирж┐ржЯрж┐</Link>
            </li>
            <li className="nav-item">
              <Link className="nav-link" to="/resources">рж░рж┐рж╕рзЛрж░рзНрж╕</Link>
            </li>
            <li className="nav-item">
              <Link className="nav-link" to="/market">ржмрж╛ржЬрж╛рж░</Link>
            </li>
          </ul>

          <div className="d-flex">
            <button className="btn btn-success me-2">ржХрзГрж╖ржХ</button>
          </div>
        </div>
      </div>
     </nav>


     <div className="marketplace-section">
      <Container>
        <div className="marketplace-header text-center mb-5">
          <h2 className="fw-bold">ржХрзГрж╖рж┐ ржжрж┐ржмрж╛ржирж┐рж╢рж┐ ржорж╛рж░рзНржХрзЗржЯржкрзНрж▓рзЗрж╕</h2>
          <p className="text-muted">Krishi Dibanishi Marketplace</p>
          <p className="text-muted fs-6 mx-auto" style={{ maxWidth: "600px" }}>
            ржХрзГрж╖рж┐, ржорзОрж╕рзНржп ржУ ржкрзНрж░рж╛ржгрж┐рж╕ржорзНржкржжрзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рж╕ржХрж▓ ржкржгрзНржп ржУ рж╕рзЗржмрж╛ ржПржХ
            ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ред ржмрж┐рж╢рзНржмрж╕рзНржд ржмрж┐ржХрзНрж░рзЗрждрж╛ ржУ рж╕рж╛рж╢рзНрж░ржпрж╝рзА ржорзВрж▓рзНржпред
          </p>
        </div>
                <Row className="mb-4 justify-content-center align-items-center">
          <Col md={6}>
            <Form.Control
              type="text"
              placeholder="ржкржгрзНржп, ржмрзАржЬ, ржпржирзНрждрзНрж░ржкрж╛рждрж┐ ржмрж╛ рж╕рзЗржмрж╛ ржЦрзБржБржЬрзБржи..."
              className="search-input"
            />
          </Col>
          <Col md="auto" className="d-flex gap-2">
            <Button variant="outline-secondary" className="btn-filter">
              ржлрж┐рж▓рзНржЯрж╛рж░
            </Button>
            <Button variant="outline-secondary" className="btn-location">
              ржПрж▓рж╛ржХрж╛
            </Button>
          </Col>
        </Row>

        <Row className="g-4 text-center mb-5">
          {categories.map(({ icon, title, subtitle, count }, idx) => (
            <Col md={3} key={idx}>
              <Card className="category-card">
                <div className="icon">{icon}</div>
                <h5>{title}</h5>
                <p>{subtitle}</p>
                <Badge bg="light" text="muted" className="count-badge">
                  {count}
                </Badge>
              </Card>
            </Col>
          ))}
        </Row>

        <h4 className="mb-3 fw-bold">ржмрж┐рж╢рзЗрж╖ ржЕржлрж╛рж░</h4>
        <Row className="mb-4">
          {specialOffers.map(({ title, description, validity, code }, idx) => (
            <Col md={6} key={idx}>
              <Card className="special-offer-card p-3">
                <h5>{title}</h5>
                <p>{description}</p>
                <small className="text-muted">
                  {validity} | ржХрзЛржб: <code>{code}</code>
                </small>
                <Button variant="warning" size="sm" className="btn-offer mt-3">
                  ржЕржлрж╛рж░ ржкрж╛ржи
                </Button>
              </Card>
            </Col>
          ))}
        </Row>

        <Tab.Container activeKey={activeTab} onSelect={setActiveTab}>
          <Nav variant="tabs" className="marketplace-tabs mb-4 justify-content-center">
            <Nav.Item><Nav.Link eventKey="products">ржкржгрзНржпрж╕ржорзВрж╣</Nav.Link></Nav.Item>
            <Nav.Item><Nav.Link eventKey="services">рж╕рзЗржмрж╛рж╕ржорзВрж╣</Nav.Link></Nav.Item>
          </Nav>

          <Tab.Content>
            <Tab.Pane eventKey="products">
              <div className="mt-5">
                <h4 className="services-heading">ржЬржиржкрзНрж░рж┐ржпрж╝ ржкржгрзНржп</h4>
                <Row className="g-3">
                  {productsState.slice(0, visibleProducts).map((p, idx) => (
                    <Col md={4} key={idx}>
                      <Card className="product-card">
                        <Row className="align-items-center g-3">
                          <Col md={2} className="product-icon">
                            {p.category === "ржмрзАржЬ ржУ ржЪрж╛рж░рж╛" && "ЁЯМ╛"}
                            {p.category === "ржорзОрж╕рзНржп ржЪрж╛рж╖" && "ЁЯРЯ"}
                            {p.category === "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░" && "ЁЯРД"}
                            {p.category1 === "ржЦрж╛ржжрзНржп ржУ рж╕рж╛рж░" && "ЁЯРФ"}
                            {p.category === "ржпржирзНрждрзНрж░ржкрж╛рждрж┐" && "ЁЯЪЬ"}
                            {p.category === "ржФрж╖ржз ржУ ржнрзНржпрж╛ржХрж╕рж┐ржи" && "ЁЯТЙ"}
                          </Col>
                          <Col md={10}>
                            <div className="badge-container d-flex flex-column align-items-end gap-1 mb-2" style={{ minHeight: '40px' }}>
                              {p.tag && (
                                <Badge bg={p.tag === "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо" ? "dark" : "light"} text={p.tag === "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо" ? "light" : "dark"} className="fw-semibold border">
                                  {p.tag}
                                </Badge>
                              )}
                              {p.discountPercent > 0 && (
                                <Badge bg="danger" className="fw-semibold">
                                  {p.discountPercent}% ржЫрж╛ржбрж╝
                                </Badge>
                              )}
                              {p.discountTaka > 0 && (
                                <Badge bg="danger" className="fw-semibold">
                                  {p.discountTaka} ржЯрж╛ржХрж╛ ржЫрж╛ржбрж╝
                                </Badge>
                              )}
                            </div>
                            <div className="mb-2">
                              <Badge bg="light" text="dark" className="fw-semibold border">
                                {p.category}
                              </Badge>
                             </div>
                            <div className="mb-2">
                              <Badge bg="light" text="dark" className="fw-semibold border">
                                {p.category1}
                              </Badge>
                            </div>
                            <h5 className="fw-semibold">{p.title}</h5>
                            <small className="text-muted fst-italic">{p.subtitle}</small>
                            <p className="my-2">{p.desc}</p>
                            <p className="price-section">
                              {p.price.toLocaleString()} ржЯрж╛ржХрж╛
                              {p.originalPrice > 0 && (
                                <span className="original-price">
                                  <del>{p.originalPrice.toLocaleString()} ржЯрж╛ржХрж╛</del>
                                </span>
                              )}
                            </p>
                            <p className="text-muted mb-1">{p.unit}</p>
                            <div className="rating">тШЕ {p.rating} ({p.ratingCount})</div>
                            <div className="d-flex justify-content-between align-items-center mb-2">
                              <small className="text-muted">ЁЯУН{p.location}</small>
                              <Badge bg="success" className="fw-semibold">рж╕рзНржЯржХрзЗ ржЖржЫрзЗ</Badge>
                            </div>
                            <div className="d-flex gap-2 align-items-center">
                              <Button variant="success" size="sm" className="flex-grow-1">ЁЯЫТ  ржХрж╛рж░рзНржЯрзЗ ржпрзЛржЧ ржХрж░рзБржи</Button>
                              <Button variant="outline-primary" size="sm">ЁЯУЮ</Button>
                              <Button variant="outline-secondary" size="sm">ЁЯТм</Button>
                            </div>
                          </Col>
                        </Row>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </div>
            </Tab.Pane>


            <Tab.Pane eventKey="services">
              <div className="mt-5"></div>
              <h4 className="services-heading">ржЙржкрж▓ржмрзНржз рж╕рзЗржмрж╛рж╕ржорзВрж╣</h4>
              <div className="services-grid">
                {services.map((service, index) => (
                  <div 
                    key={index} 
                    className={`service-card ${index < 3 ? 'pani-bg' : ''}`}
                  >
                    <div className="service-icon">{service.icon}</div>
                    <h5 className="service-title">{service.title}</h5>
                    <p className="service-desc">{service.desc}</p>
                    <p className="service-price">
                      <span className="price-icon">{service.priceIcon}</span>
                      {service.price}
                    </p>
                    <button 
                      className={`btn-service ${service.btnDisabled ? 'disabled' : ''}`} 
                      disabled={service.btnDisabled}
                    >
                      {service.btnText}
                    </button>
                  </div>
                ))}
              </div>
            </Tab.Pane>
          </Tab.Content>
        </Tab.Container>

        <TrendingNow />
      </Container>
    </div>
  </>
  );
};

export default Marketplace;
